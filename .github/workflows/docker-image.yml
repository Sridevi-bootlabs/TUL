on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

name: AWS WORKFLOW

jobs:
  
    runs-on: ubuntu-latest

    steps:    
    - name: Checkout
      uses: actions/checkout@v2


    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build and push the image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.REPO_NAME }}
        IMAGE_TAG: "latest"

      run: |
        # Build a docker container and push it to ECR 
        echo "ECR Login"
       aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 779527285137.dkr.ecr.us-east-1.amazonaws.com
       docker build -t code .
        echo "Pushing image to ECR..."
       docker push 779527285137.dkr.ecr.us-east-1.amazonaws.com/code:latest
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
    
       
    - name: Login For EKS
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}   
        aws-region: us-east-2
    
    - name: Deploy into EKS  
      id: deploy-image
      run: |
        aws eks --region us-east-2 update-kubeconfig --name vaibhav
        helm upgrade --recreate-pods -i octo-app octo-app
  sonarqube:
    name: sonarqube
    needs: deployment
    uses: vaibhavrathod-1/sonarqube-scan/.github/workflows/build.yml@main
    secrets:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
